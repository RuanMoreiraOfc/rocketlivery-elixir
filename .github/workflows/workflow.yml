name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  build:
    if: "!startsWith(github.event.head_commit.message, 'docs:') && !contains(github.event.head_commit.message, '/skip:')"
    name: Build and Test 🔨
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:14.3
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout 👀
        uses: actions/checkout@v3

      - name: "Setup Secrets 🕵️‍♂️"
        run: bash .github/scripts/setup_secret.sh
        env:
          GUARDIAN_SECRET: ${{ secrets.GUARDIAN_SECRET }}

      - name: Set up Elixir 🔌
        uses: erlef/setup-beam@988e02bfe678367a02564f65ca2e37726dc0268f
        with:
          elixir-version: "1.13"
          otp-version: "23.3.2"

      - name: Restore Dependencies Cache 🤳
        id: mix_cache_step
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install Dependencies 🏋️‍♂️
        if: steps.mix_cache_step.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Check Formatting 🔍
        run: mix format --check-formatted

      - name: Compile 🏗
        run: mix compile
        env:
          MIX_ENV: test

      - name: Run Credo 🤵
        run: mix credo --strict
        env:
          MIX_ENV: test

      - name: Check Coverage 🧪
        run: mix coveralls.json
        env:
          MIX_ENV: test

      - name: Run Codecov Script
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main'
    if: "!startsWith(github.event.head_commit.message, 'docs:') && !contains(github.event.head_commit.message, '/skip:')"

    name: Deploy Gigalixir 🚀
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 👀
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0

      - name: "Setup Secrets 🕵️‍♂️"
        run: bash .github/scripts/setup_secret.sh
        env:
          GUARDIAN_SECRET: ${{ secrets.GUARDIAN_SECRET }}

      - name: "Commit Secrets Secretly 🤫"
        run: |
          git config --global user.email "deploy@github.actions"
          git config --global user.name "Github Actions"
          git add config/* -f
          git commit -m "deploy: setup secret"

      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.1

      - uses: mhanberg/gigalixir-action@v0.4.0
        with:
          GIGALIXIR_APP: rocketlivery
          GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
          GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
          MIGRATIONS: false
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
